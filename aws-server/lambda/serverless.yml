service: portalo

# deplyes each function individually
package:
  individually: true

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: eu-west-3 # also edit aws-server/lambda/helpers/dbOperations
  lambdaHashingVersion: 20201221
  apiGateway:
    shouldStartNameWithService: true
  iam:
    role:
      statements: # permissions for all of your functions can be set here
        - Effect: Allow
          Action: # Gives permission to DynamoDB tables in a specific region
            - dynamodb:DescribeTable
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: # or straight ARN
            - Fn::GetAtt: ["MyDynamoDbEmployeesTable", "Arn"]

functions:
  login:
    handler: login.login
    name: my-login-function
    memorySize: 128
    description: Function that log user.
    events:
    - httpApi: 
        path: /login
        method: post
  register:
    handler: register.register
    name: post-function
    memorySize: 128
    description: Function that register user.
    events:
    - httpApi: 
        path: /register
        method: post

resources:
  Resources:
    MyDynamoDbEmployeesTable:
      Type: AWS::DynamoDB::Table
      Properties: 
        TableName: Employees
        AttributeDefinitions: 
          - AttributeName: username
            AttributeType: S
        KeySchema: 
          - AttributeName: username
            KeyType: HASH
        TimeToLiveSpecification: 
          AttributeName: ExpirationTime
          Enabled: true
        ProvisionedThroughput: 
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    CognitoUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
          UserPoolName: ${self:provider.stage}-user-pool
          UsernameAttributes:
              - email
          AutoVerifiedAttributes:
              - email
    CognitoUserPoolClient:  # client that can access the cognito user pool
      Type: AWS::Cognito::UserPoolClient
      Properties:
          ClientName: ${self:provider.stage}-user-pool-client
          UserPoolId:
              Ref: CognitoUserPool
          ExplicitAuthFlows:
              - ADMIN_NO_SRP_AUTH
          GenerateSecret: false
          # SupportedIdentityProviders:
          #   - COGNITO
          #   - Facebook
          #   - Google

# https://circleci.com/blog/streamlined-web-application-testing-with-the-cypress-circleci-orb/

# https://docs.cypress.io/guides/continuous-integration/introduction#CircleCI
# version: 2.1
# orbs:
#   cypress: cypress-io/cypress@1.27.0
# workflows:
#   build: 
#     jobs:
#       - cypress/install:
#           build: yarn run build # run a custom app build step
#           yarn: true
#       - cypress/run:
#           requires:
#             - cypress/install
#           parallel: true # split all specs across machines
#           parallelism: 4 # use 4 CircleCI machines to finish quickly
#           yarn: true
#           group: 'all tests' # name this group "all tests" on the dashboard
#           start: yarn start # start server before running tests

# version: 2.1
# orbs:
#   cypress: cypress-io/cypress@1
#   react: thefrontside/react@0.1.0
# workflows:
#   push:
#     jobs:
#       - react/install
#       - react/test:
#           requires:
#             - react/install
#   build:
#     jobs:
#       - cypress/run:
#           yarn: true
#           start: yarn start
#           wait-on: 'http://localhost:3000'
#           no-workspace: true



#           version: 2.1
# orbs:
#   cypress: cypress-io/cypress@1
# workflows:
#   build:
#     jobs:
#       - cypress/run:
#           executor: cypress/base-14

version: 2.1
orbs:
  cypress: cypress-io/cypress@1.25.0
workflows:
  build:
    jobs:
      - cypress/run:
          executor: cypress/base-14-0-0
          yarn: true
          start: yarn start
          wait-on: 'http://localhost:3000'
          no-workspace: true
          post-steps:
            - run: apt-get update
            - run: apt-get install -y libgbm-dev
            - run: yarn cypress run
            # - run: yarn run test


# version: 2
# jobs:
#   build:
#     docker:
#       - image: cypress/base:12.0.0
#         environment:
#           ## this enables colors in the output
#           TERM: xterm
#     # working_directory: ~/app
#     steps:
#       - checkout
#       - restore_cache:
#           keys:
#             - v1-deps-{{ .Branch }}-{{ checksum "package.json" }}
#             - v1-deps-{{ .Branch }}
#             - v1-deps
#       - run:
#           name: Install Dependencies
#           command: yarn install --frozen-lockfile
#       - save_cache:
#           key: v1-deps-{{ .Branch }}-{{ checksum "package.json" }}
#           paths:
#             - ~/.cache  ## cache both yarn and Cypress!
#       - run: $(yarn bin)/cypress run


# version: 2.1
# orbs:
#   cypress: cypress-io/cypress@1
# workflows:
#   build:
#     jobs:
#       # install dependencies first (on 1 machine)
#       - cypress/install

#       # now run tests
#       - cypress/run:
#           # give this job a custom name for clarity
#           name: 'end-to-end tests'
#           requires:
#             # use previously installed dependencies
#             # to avoid installing them on each machine running tests
#             - cypress/install
#           executor: cypress/base-14   
#           # yarn: true         
#           parallel: true # run tests in parallel
#           parallelism: 3 # use 3 CircleCI machines
#           group: 3 machines # name this group "3 machines"


# version: 2.1
# # Define the jobs we want to run for this project
# jobs:
#   build:
#       # pre-built images: https://circleci.com/docs/2.0/circleci-images/ 
#     docker:
#       - image: circleci/node:12.10
#     steps:
#       - checkout
#       - run: 
#           name: Install all packages
#           command: yarn install
#       - run: 
#           name: Start local dev env
#           command: |
#             yarn startPort3000
#       - run: 
#           name: Run all tests
#           command: |
#             yarn cypress run
#             yarn test -- src/tests/react-testing-library/routing.test.tsx
